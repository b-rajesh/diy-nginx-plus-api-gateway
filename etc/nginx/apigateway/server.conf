map_hash_bucket_size 128;
# [Loading all the upstream config]
include /etc/nginx/upstreams/*.conf;
include /etc/nginx/policies/jwt_claims_filter/*.conf;
include /etc/nginx/policies/ratelimit/*.conf;
include /etc/nginx/policies/global/authz/issuer.conf; # revisit
include  /etc/nginx/policies/global/logs/format.conf;
server {
    set $api_name -; # Start with an undefined API name, each route should update this with appropriate value
    
    #access_log /var/log/nginx/access.log api_main; # Each Server or API may also log to a separate file
    access_log /var/log/nginx/access.log api_json;

    # [Including config for server_name & ports to expose to consume this API Gateway]
    include /etc/nginx/policies/global/routes/server_ports.conf;
    
    # Return Not found for any api call without a context
    location = / {
        return 404;
    }

    # [OIDC JWT Authorization Policy configuration included at server(gateway) level to manage IDP's jwks uri effectively for the organisation]
    include /etc/nginx/policies/global/authz/oidc_authz.conf;

    # [Including global route policies]
    include /etc/nginx/policies/global/routes/global_policy.conf;

    # [Including global proxy header policies that get applied before routing to the upstream]
    include /etc/nginx/policies/global/upstreams/global_policy.conf;

    # [ To include API routes which exposed as endpoint ]
    include /etc/nginx/routes/*.conf;

    # Accepted mime type for this api gateway.
    include /etc/nginx/apigateway/mime.types;

    # [ API client friendly JSON error responses ]
    include /etc/nginx/apigateway/default_errors.conf;  

    # [Including global response policies that get applied before responding to the consumer]
    include /etc/nginx/policies/global/responses/global_policy.conf;

    # [Including app protect - to apply WAF policies on nginx plus]
    #include /etc/nginx/policies/global/app_protect/app_protect.conf;

    # Error responses
    error_page 404 = @400;         # Invalid paths are treated as bad requests
}

# Enable api feature to configure nginx plus for configuration, monitoring and metrics.
server {
        # Status page is enabled on port 8080:
        listen 8080;
        access_log off;

        location /api {
            # Enable CRUD for the admin api
            api write=on;
            # directives limiting access to the API
        }

        location = /dashboard.html {
            root   /usr/share/nginx/html;
        }
        location /swagger-ui {
            root   /usr/share/nginx/html;
        }
}
